#!/usr/bin/env node

const fs = require('fs')
const path = require('path')

const home = require('home')()
const open = require('open')
const chalk = require('chalk')
const yaml = require('js-yaml')
const program = require('commander')

const pkg = require('../package.json')
const Everblog = require('../lib/everblog')

const configPath = path.join(home, '.everblogrc')
const log = str => {
  console.log()
  console.log('  ' + chalk.green(str).split('\n').join('\n  '))
  console.log()
}
const error = str => {
  console.log()
  console.log('  ' + chalk.red(str).split('\n').join('\n  '))
  console.log()
}

program
  .version(pkg.version)
  .usage('[command]')

program
  .command('config')
  .description('list config')
  .action(showConfig)

program
  .command('build')
  .description('build blog')
  .action(buildBlog)

program
  .command('start')
  .description('build and start blog')
  .action(startBlog)

program.parse(process.argv)

if (process.argv.length === 2) {
  program.outputHelp()
}

async function showConfig () {
  try {
    log(fs.readFileSync(configPath))
  } catch (e) {
    error(`Failed to read ${configPath}, please create it.`)
  }
}

async function buildBlog () {
  const pwd = process.cwd()
  const configStr = fs.readFileSync(configPath)
  const config = yaml.safeLoad(configStr)

  if (!config.token || !config.noteStoreUrl || !config.notebook) {
    error('~/.everblogrc must include:\n\n  token: "xxx"\n  noteStoreUrl: "xxx"\n  notebook: "xxx"')
    return
  }

  const buildProcessor = require(pwd)
  const everblog = new Everblog(config)
  const data = await everblog.findNotes()
  data.userStore = everblog._userStore
  data.noteStore = everblog._noteStore

  const distPath = await buildProcessor(data)
  log('build finished!')
  return distPath
}

async function startBlog () {
  let distPath = await buildBlog()
  if (!distPath) {
    return
  }
  if (!fs.existsSync(distPath)) {
    error(distPath + ' not exist!')
    return
  }
  open(distPath)
}
